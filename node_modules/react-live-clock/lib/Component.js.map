{"version":3,"sources":["../src/Component.js"],"names":["getDate","date","Date","getTime","ReactLiveClock","props","ticking","tickTimer","setInterval","forceUpdate","interval","clearInterval","children","className","format","timezone","dateValue","localizedTime","tz","formattedTime","Component","propTypes","string","oneOfType","number","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU;AAAA,SAAQC,OAAO,IAAIC,IAAJ,CAASD,IAAT,EAAeE,OAAf,EAAP,GAAkC,IAAID,IAAJ,GAAWC,OAAX,EAA1C;AAAA,CAAhB;;IAEqBC,c;;;;;;;;;;;wCACC;AAAA;;AAClB,UAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,aAAKC,SAAL,GAAiBC,YAAY,YAAM;AACjC,iBAAKC,WAAL;AACD,SAFgB,EAEd,KAAKJ,KAAL,CAAWK,QAFG,CAAjB;AAGD;AACF;;;2CAEsB;AACrB,UAAI,KAAKH,SAAT,EAAoB;AAClBI,sBAAc,KAAKJ,SAAnB;AACD;AACF;;;6BAEQ;AAAA,mBAC+C,KAAKF,KADpD;AAAA,UACAO,QADA,UACAA,QADA;AAAA,UACUC,SADV,UACUA,SADV;AAAA,UACqBZ,IADrB,UACqBA,IADrB;AAAA,UAC2Ba,MAD3B,UAC2BA,MAD3B;AAAA,UACmCC,QADnC,UACmCA,QADnC;;AAEP,UAAMC,YAAYhB,QAAQC,QAAQW,QAAhB,CAAlB;AACA,UAAMK,gBAAgB,8BAAOD,SAAP,CAAtB;;AAEA,UAAID,QAAJ,EAAc;AACZE,sBAAcC,EAAd,CAAiBH,QAAjB;AACD;;AAED,UAAMI,gBAAgBF,cAAcH,MAAd,CAAqBA,MAArB,CAAtB;;AAEA,aACE;AAAA;AAAA,UAAM,WAAWD,SAAjB;AAA8BM;AAA9B,OADF;AAGD;;;;EA7ByC,gBAAMC,S;;kBAA7BhB,c;;;AAgCrBA,eAAeiB,SAAf,GAA2B;AACzBT,YAAU,oBAAUU,MADK;AAEzBT,aAAW,oBAAUS,MAFI;AAGzBrB,QAAM,oBAAUsB,SAAV,CAAoB,CACxB,oBAAUC,MADc,EAExB,oBAAUF,MAFc,CAApB,CAHmB;AAOzBR,UAAQ,oBAAUQ,MAPO;AAQzBZ,YAAU,oBAAUc,MARK;AASzBlB,WAAS,oBAAUmB,IATM;AAUzBV,YAAU,oBAAUO;AAVK,CAA3B;;AAaAlB,eAAesB,YAAf,GAA8B;AAC5Bb,aAAW,IADiB;AAE5BZ,QAAM,IAFsB;AAG5Ba,UAAQ,OAHoB;AAI5BJ,YAAU,IAJkB;AAK5BJ,WAAS,KALmB;AAM5BS,YAAU;AANkB,CAA9B","file":"Component.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment-timezone';\r\n\r\nconst getDate = date => date ? new Date(date).getTime() : new Date().getTime();\r\n\r\nexport default class ReactLiveClock extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.ticking) {\r\n      this.tickTimer = setInterval(() => {\r\n        this.forceUpdate();\r\n      }, this.props.interval);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.tickTimer) {\r\n      clearInterval(this.tickTimer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {children, className, date, format, timezone} = this.props;\r\n    const dateValue = getDate(date || children);\r\n    const localizedTime = moment(dateValue);\r\n\r\n    if (timezone) {\r\n      localizedTime.tz(timezone);\r\n    }\r\n\r\n    const formattedTime = localizedTime.format(format);\r\n\r\n    return (\r\n      <time className={className}>{ formattedTime }</time>\r\n    );\r\n  }\r\n}\r\n\r\nReactLiveClock.propTypes = {\r\n  children: PropTypes.string,\r\n  className: PropTypes.string,\r\n  date: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string\r\n  ]),\r\n  format: PropTypes.string,\r\n  interval: PropTypes.number,\r\n  ticking: PropTypes.bool,\r\n  timezone: PropTypes.string\r\n};\r\n\r\nReactLiveClock.defaultProps = {\r\n  className: null,\r\n  date: null,\r\n  format: 'HH:mm',\r\n  interval: 1000,\r\n  ticking: false,\r\n  timezone: null\r\n};\r\n"]}